@page "/importdata"
@namespace Csharp_blazor_interface_Presentation.Pages

@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment

<h3>Import de Fichier</h3>

<div class="import-container">
    <!-- Zone de drag-and-drop -->
    <div class="drop-zone" 
        @ondragover:preventDefault="true" 
        @ondrop:preventDefault="true"
        @ondrop="OnDrop">
        <p>@(fileName == null ? "Glissez et déposez votre fichier ici ou cliquez sur Parcourir." : $"Fichier chargé : {fileName}")</p>
    </div>

    <!-- Option parcourir -->
    <input type="file" @onchange="OnFileSelected" />

    <!-- Bouton Flush -->
    <button @onclick="FlushFile" disabled="@string.IsNullOrEmpty(fileName)">Flush</button>
</div>

@code {
    private string fileName;
    private string destinationPath;

    private async Task OnDrop(DragEventArgs e)
    {
        if (e.DataTransfer?.Files is not null && e.DataTransfer.Files.Count > 0)
        {
            var file = e.DataTransfer.Files[0];
            await SaveFileAsync(file);
        }
    }

    private async Task OnFileSelected(ChangeEventArgs e)
    {
        if (e.Value is not null && e.Value is string filePath)
        {
            var file = e.Value as IBrowserFile;
            await SaveFileAsync(file);
        }
    }

    private async Task SaveFileAsync(IBrowserFile file)
    {
        try
        {
            fileName = file.Name;
            string targetFolder = Path.Combine(Environment.ContentRootPath, "AI"); // Répertoire où se trouve le .py
            destinationPath = Path.Combine(targetFolder, fileName);

            // Assurez-vous que le répertoire existe
            if (!Directory.Exists(targetFolder))
            {
                Directory.CreateDirectory(targetFolder);
            }

            // Enregistrer le fichier
            using var stream = File.Create(destinationPath);
            await file.OpenReadStream().CopyToAsync(stream);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de l'import : {ex.Message}");
        }
    }

    private void FlushFile()
    {
        fileName = null;
        destinationPath = null;
        StateHasChanged();
    }
}
